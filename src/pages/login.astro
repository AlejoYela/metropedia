---
import Layout from "../layouts/Layout.astro";

let isLoading = true;
let isRegistered = false;

const clientId = "JozbrwbE60QoHfD6hZiQy18zIQFxGEw0"; // Tu Client ID de Auth0
const clientSecret =
  "dP2T0wgImFNyHKNa-rIziBbA9_3H2p5cYC3wYyuy3Xx37nBW9sPeWm7vKFVn-qE7"; // Tu Client Secret de Auth0
const redirectUri = "https://metropedia.vercel.app/login"; // La URI de redirección que configuraste

const { code } = Astro.params;

async function getAuthToken(code) {
  const response = await fetch(
    "https://dev-6tbiy7tc5eqhqb7k.us.auth0.com/oauth/token",
    {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        grant_type: "authorization_code",
        client_id: clientId,
        client_secret: clientSecret, // Recuerda proteger esto en el backend
        code: code,
        redirect_uri: redirectUri,
      }),
    },
  );

  if (!response.ok) {
    throw new Error("Error al obtener el token");
  }

  const data = await response.json();
  return data; // Este objeto incluirá `access_token` y `id_token`
}

// Obtener el token y luego la información del usuario
let userInfo = null;
if (code) {
  const { access_token } = await getAuthToken(code);

  // Usar el token para obtener los datos del usuario
  const userResponse = await fetch(
    "https://dev-6tbiy7tc5eqhqb7k.us.auth0.com/userinfo",
    {
      headers: {
        Authorization: `Bearer ${access_token}`,
      },
    },
  );

  if (userResponse.ok) {
    userInfo = await userResponse.json();
  }
}
---

<Layout title="Metropedia.">
  <section class="flex justify-center items-center h-dvh">
    <form class="max-w-md mx-auto">
      <p class="text-white font-semibold text-xl">
        Hola, ${userInfo.name} Registre su número de cédula.
      </p>
      <p class="text-[#9a9a9a] font-bold mb-5">
        Éste se usará en su certificado.
      </p>
      <div class="relative z-0 w-full mb-5 group">
        <input
          type="number"
          name="floating_id"
          id="floating_id"
          class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-primary focus:outline-none focus:ring-0 focus:border-primary peer"
          placeholder=" "
          required
        />
        <label
          for="floating_id"
          class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-primary peer-focus:dark:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
        >
          Número de cédula
        </label>
      </div>

      <button
        type="submit"
        class="text-secondary bg-primary hover:bg-primary focus:ring-4 focus:outline-none focus:ring-primary font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-primary dark:hover:bg-primary dark:focus:ring-primary"
      >
        Registrar
      </button>
    </form>
  </section>
</Layout>

<style>
  .about {
    margin: auto;
    color: white;
    line-height: 1.6;
  }

  .metropedia {
    -webkit-mask-image: linear-gradient(
        to right,
        transparent,
        black 30%,
        black 70%,
        transparent
      ),
      linear-gradient(to left, transparent, black 30%, black 70%, transparent);
    mask-image: linear-gradient(
        to right,
        transparent,
        black 30%,
        black 70%,
        transparent
      ),
      linear-gradient(to left, transparent, black 30%, black 70%, transparent);
  }

  .titulo {
    font-family: "Questrial", system-ui, sans-serif;
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .bounce {
    animation: bounce 1s infinite;
  }
</style>
