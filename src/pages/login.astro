---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Metropedia">
  <section class="flex justify-center items-center h-dvh">
    <form class="max-w-md mx-auto">
      <p class="text-white font-semibold text-xl">
        Hola, Registre su número de cédula.
      </p>
      <div class="relative z-0 w-full mb-5 group">
        <input
          type="number"
          name="floating_id"
          id="floating_id"
          class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-primary focus:outline-none focus:ring-0 focus:border-primary peer"
          placeholder=" "
          required
        />
        <label
          for="floating_id"
          class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-primary peer-focus:dark:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
        >
          Número de cédula
        </label>
      </div>
    </form>
  </section>
</Layout>

<script>
  import { createAuth0Client } from "@auth0/auth0-spa-js";

let auth0Client = null;

async function configureAuth0() {
  // Configurar Auth0 Client
  auth0Client = await createAuth0Client({
    domain: "dev-6tbiy7tc5eqhqb7k.us.auth0.com", // Tu dominio de Auth0
    clientId: "JozbrwbE60QoHfD6hZiQy18zIQFxGEw0", // Tu Client ID
    redirectUri: "https://metropedia.vercel.app/login", // URL de redirección configurada
    authorizationParams: {
      scope: "openid profile email", // Solicitar los permisos necesarios
    },
  });
}



async function getUserData() {
  try {
    if (!auth0Client) {
      // Si Auth0 aún no ha sido configurado, hacerlo
      await configureAuth0();
    }

    // Si ya estamos autenticados, obtenemos el token silenciosamente
    const accessToken = await auth0Client.getTokenSilently();

    if (!accessToken) {
      throw new Error("No se pudo obtener el token de acceso.");
    }

    console.log("access token: ", accessToken);
    

    // Obtener los datos del usuario con el token de acceso
    const userInfoResponse = await fetch("https://dev-6tbiy7tc5eqhqb7k.us.auth0.com/userinfo", {
      method: "GET",
      headers: {
        Authorization: `Bearer ${accessToken}`, // Usamos el token como Bearer
      },
    });

    if (!userInfoResponse.ok) {
      throw new Error("Error al obtener los datos del usuario.");
    }

    const userData = await userInfoResponse.json();
    console.log("Datos del usuario:", userData);

    // Mostrar los datos en el DOM (opcional)
    document.getElementById("user-data").textContent = JSON.stringify(userData, null, 2);
  } catch (error) {
    console.error("Error al obtener los datos del usuario:", error);
  }
}

// Llamar a la función para obtener los datos del usuario al cargar la página.
getUserData();
</script>

<div id="user-data"></div>


<style>
  .about {
    margin: auto;
    color: white;
    line-height: 1.6;
  }

  .metropedia {
    -webkit-mask-image: linear-gradient(
        to right,
        transparent,
        black 30%,
        black 70%,
        transparent
      ),
      linear-gradient(to left, transparent, black 30%, black 70%, transparent);
    mask-image: linear-gradient(
        to right,
        transparent,
        black 30%,
        black 70%,
        transparent
      ),
      linear-gradient(to left, transparent, black 30%, black 70%, transparent);
  }

  .titulo {
    font-family: "Questrial", system-ui, sans-serif;
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .bounce {
    animation: bounce 1s infinite;
  }
</style>
