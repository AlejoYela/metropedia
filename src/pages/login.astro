---
import Layout from "../layouts/Layout.astro";

let isLoading = true;
let isRegistered = false;

const clientId = 'JozbrwbE60QoHfD6hZiQy18zIQFxGEw0'; // Tu Client ID de Auth0
const clientSecret = '<YOUR_CLIENT_SECRET>'; // Tu Client Secret de Auth0
const redirectUri = 'https://metropedia.vercel.app/login'; // La URI de redirección que configuraste
---

<Layout title="Metropedia.">
  <section class="flex justify-center items-center h-dvh">
    {isLoading ? (
      <div>
        <p class="text-lg font-medium text-white">
          Comprobando su identidad...
        </p>
        <div class="spinner mt-4" />
      </div>
    ) : isRegistered ? (
      <p class="text-lg font-medium text-white">
        Accediendo al campus...
      </p>
    ) : (
      <form class="max-w-md mx-auto">
        <p class="text-white font-semibold text-xl">Registre su número de cédula.</p>
        <p class="text-[#9a9a9a] font-bold mb-5">Éste se usará en su certificado.</p>
        <div class="relative z-0 w-full mb-5 group">
          <input
            type="number"
            name="floating_id"
            id="floating_id"
            class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-primary focus:outline-none focus:ring-0 focus:border-primary peer"
            placeholder=" "
            required
          />
          <label
            for="floating_id"
            class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-primary peer-focus:dark:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
          >
            Número de cédula
          </label>
        </div>

        <button
          type="submit"
          class="text-secondary bg-primary hover:bg-primary focus:ring-4 focus:outline-none focus:ring-primary font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-primary dark:hover:bg-primary dark:focus:ring-primary"
        >
          Registrar
        </button>
      </form>
    )}
  </section>
</Layout>

<script>
// Al cargar la página, verificamos si tenemos un código de autorización en la URL
window.addEventListener('DOMContentLoaded', () => {
  // Capturamos el parámetro "code" de la URL
  const urlParams = new URLSearchParams(window.location.search);
  const code = urlParams.get('code');
  
  if (code) {
    // Intercambiamos el código por tokens
    exchangeCodeForTokens(code);
  } else {
    // Si no hay código, mantenemos el estado de carga
    isLoading = false;
    isRegistered = false;
  }
});

// Función para intercambiar el código de autorización por tokens
async function exchangeCodeForTokens(code) {
  try {
    const response = await fetch('https://dev-6tbiy7tc5eqhqb7k.us.auth0.com/oauth/token', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        grant_type: 'authorization_code',
        client_id: 'JozbrwbE60QoHfD6hZiQy18zIQFxGEw0',
        client_secret: '<YOUR_CLIENT_SECRET>',
        code: code,
        redirect_uri: 'https://metropedia.vercel.app/login'
      })
    });

    const data = await response.json();

    if (data.id_token && data.access_token) {
      const idToken = data.id_token;
      const accessToken = data.access_token;

      // Decodificar el ID Token (si necesitas datos del usuario)
      const decodedIdToken = JSON.parse(atob(idToken.split('.')[1]));

      console.log(decodedIdToken); // Imprimir los datos decodificados

      // Cambiar el estado y actualizar la UI
      isLoading = false;
      isRegistered = true;
    } else {
      // Si no se pudo obtener los tokens
      console.error('No se pudieron obtener los tokens');
      isLoading = false;
      isRegistered = false;
    }
  } catch (error) {
    console.error('Error al obtener los tokens:', error);
    isLoading = false;
    isRegistered = false;
  }
}
</script>

<style>
  .about {
    margin: auto;
    color: white;
    line-height: 1.6;
  }

  .metropedia {
    -webkit-mask-image: linear-gradient(
            to right,
            transparent,
            black 30%,
            black 70%,
            transparent
        ),
        linear-gradient(
            to left,
            transparent,
            black 30%,
            black 70%,
            transparent
        );
    mask-image: linear-gradient(
            to right,
            transparent,
            black 30%,
            black 70%,
            transparent
        ),
        linear-gradient(
            to left,
            transparent,
            black 30%,
            black 70%,
            transparent
        );
  }

  .titulo {
    font-family: "Questrial", system-ui, sans-serif;
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .bounce {
    animation: bounce 1s infinite;
  }
</style>
