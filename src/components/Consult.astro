---
import LoginIcon from "../icons/LoginIcon.astro";
import ZoomInIcon from "../icons/ZoomInIcon.astro";

let userData = null;
let error = "";

async function fetchUserData(id) {
  try {
    const response = await fetch(`https://certificados-backend.onrender.com/api/certificates/${id}`);
    
    if (!response.ok) {
      throw new Error("Error al obtener los datos del usuario");
    }
    
    userData = await response.json();
    error = "";  // Restablece el error si fetch es exitoso
  } catch (err) {
    error = "Error al obtener los datos. Verifica el número de cédula o código.";
    userData = null;  // Restablece userData si ocurre un error
  }
}

const handleSubmit = async (event) => {
  event.preventDefault();
  const id = event.target.search.value;

  if (id) {
    await fetchUserData(id);
    // Muestra el modal solo si se obtienen datos
    if (userData) {
      document.getElementById("crud-modal").classList.remove("hidden");
      document.getElementById("overlay").classList.remove("hidden");
    }
  } else {
    error = "Por favor ingresa un número de cédula o código.";
  }
};

function closeModal() {
  document.getElementById("crud-modal").classList.add("hidden");
  document.getElementById("overlay").classList.add("hidden");
}
---

<section class="my-24 flex flex-col max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-lg dark:bg-[#191919] md:flex-row md:h-48">
  <!-- Contenido del formulario de búsqueda -->
  <div class="md:flex md:items-center md:justify-center md:w-1/2 md:bg-[#c2c6cc] md:dark:bg-[#191919]">
    <div class="px-6 py-6 md:px-8 md:py-0">
      <h2 class="text-lg font-bold text-[#c2c6cc] dark:text-white md:text-gray-100">Busca todos tus <span class="text-primary dark:text-primary md:text-primary">certificados</span> por cédula</h2>
      <p class="mt-2 text-sm text-gray-600 dark:text-gray-400 md:text-gray-400">Consulta todos los certificado que realizaste solo con tu número de cédula.</p>
    </div>
  </div>

  <div class="flex items-center justify-center pb-6 md:py-0 md:w-1/2">
    <form id="modal-form" onsubmit={handleSubmit}>
      <div class="flex flex-col p-1.5 overflow-hidden border rounded-lg dark:border-gray-600 lg:flex-row dark:focus-within:border-primary focus-within:ring focus-within:ring-opacity-40 focus-within:border-primary focus-within:ring-primary">
        <input id="modal-input" class="px-6 py-2 text-[#c2c6cc] placeholder-gray-500 bg-white outline-none dark:bg-[#191919] dark:placeholder-gray-400 focus:placeholder-transparent dark:focus:placeholder-transparent" type="text" name="search" placeholder="Ingresa número de cédula o código de certificado" aria-label="Enter your email" required />
        <button type="button" onclick={handleSubmit} class="py-3 px-5 text-base font-medium text-center text-[#252627] hover:text-white rounded-sm bg-[#fcb316] hover:bg-[#fcb316]/60 border border-primary hover:border-white focus:ring-4 focus:ring-blue-300 dark:focus:ring-blue-900">Buscar</button>
      </div>
      {error && <p class="text-red-500">{error}</p>}
    </form>
  </div>

  <!-- Modal para mostrar datos del usuario -->
  <div id="overlay" class="hidden fixed inset-0 bg-black bg-opacity-50 z-40"></div>
  <div id="crud-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-modal md:h-full">
    <div class="relative p-4 w-full max-w-xl h-full md:h-auto">
      <div class="relative p-4 bg-white rounded-lg shadow dark:bg-[#252627] sm:p-5">
        <div class="flex justify-between mb-4 rounded-t sm:mb-5">
          <div class="text-lg text-gray-900 md:text-xl dark:text-white">
            <h3 id="modal-output-name" class="font-semibold">{userData ? userData.name : "Usuario no encontrado"}</h3>
            <p id="modal-output-id" class="font-bold text-gray-400">{userData ? userData.id : ""}</p>
          </div>
          <button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" onclick={closeModal}>
            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
            </svg>
            <span class="sr-only">Close modal</span>
          </button>
        </div>

        <dl>
          <dt class="mb-2 font-semibold leading-none text-gray-900 dark:text-white">Cursos</dt>
          <dd id="modal-output-courses" class="mb-4 font-light text-gray-500 sm:mb-5 dark:text-gray-400">
            {userData && userData.certificates.length > 0 ? (
              <ul class="list-disc pl-5">
                {userData.certificates.map(course => <li>{course.course}</li>)}
              </ul>
            ) : (
              <p>No hay cursos disponibles.</p>
            )}
          </dd>
          <dt class="mb-2 font-semibold leading-none text-gray-900 dark:text-white">Estado</dt>
          <dd class="mb-4 font-light text-gray-500 sm:mb-5 dark:text-gray-400">Completados</dd>
        </dl>
      </div>
    </div>
  </div>
</section>

<script>
  function closeModal() {
    document.getElementById("crud-modal").classList.add("hidden");
    document.getElementById("overlay").classList.add("hidden");
  }
</script>
