---
const { view } = Astro.props;
---

<section
    class="my-24 flex flex-col max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-lg dark:bg-[#191919] md:flex-row md:h-48"
>
    <div
        class="md:flex md:items-center md:justify-center md:w-1/2 md:bg-[#c2c6cc] md:dark:bg-[#191919]"
    >
        <div class="px-6 py-6 md:px-8 md:py-0">
            <h2
                class="text-lg font-bold text-[#c2c6cc] dark:text-white md:text-gray-100"
            >
                Busca todos tus
                <span class="text-primary dark:text-primary md:text-primary"
                    >certificados</span
                >
                por cédula
            </h2>
            <p
                class="mt-2 text-sm text-gray-600 dark:text-gray-400 md:text-gray-400"
            >
                Consulta todos los certificado que realizaste solo con tu número de cédula.
            </p>
        </div>
    </div>

    <div class="flex items-center justify-center pb-6 md:py-0 md:w-1/2">
        <form id="modal-form">
            <div
                class="flex flex-col p-1.5 overflow-hidden border rounded-lg dark:border-gray-600 lg:flex-row dark:focus-within:border-primary focus-within:ring focus-within:ring-opacity-40 focus-within:border-primary focus-within:ring-primary"
            >
                <input
                    id="modal-input"
                    class="px-6 py-2 text-[#c2c6cc] placeholder-gray-500 bg-white outline-none dark:bg-[#191919] dark:placeholder-gray-400 focus:placeholder-transparent dark:focus:placeholder-transparent"
                    type="text"
                    name="search"
                    placeholder="Ingresa número de cédula o código de certificado"
                    aria-label="Enter your email"
                    required
                />
                <!-- Modal toggle -->
                <button
                    onclick="fetchUserData()"
                    type="submit"
                    data-modal-toggle="crud-modal"
                    class="py-3 px-5 text-base font-medium text-center text-[#252627] hover:text-white rounded-sm bg-[#fcb316] hover:bg-[#fcb316]/60 border border-primary hover:border-white focus:ring-4 focus:ring-blue-300 dark:focus:ring-blue-900"
                >
                    Buscar
                </button>
            </div>
        </form>
    </div>

    <!-- Overlay oscuro -->
    <div id="overlay" class="hidden fixed inset-0 bg-black bg-opacity-50 z-40">
    </div>

    <!-- Modal -->
    <div
        id="crud-modal"
        tabindex="-1"
        aria-hidden="true"
        class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full"
    >
        <div class="relative p-4 w-full max-w-md max-h-full">
            <!-- Modal content -->
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <!-- Modal header -->
                <div
                    class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600"
                >
                    <h3
                        class="text-lg font-semibold text-gray-900 dark:text-white"
                    >
                        Información de la consulta
                    </h3>
                    <button
                        type="button"
                        class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                        data-modal-toggle="crud-modal"
                    >
                        <svg
                            class="w-3 h-3"
                            aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 14 14"
                        >
                            <path
                                stroke="currentColor"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>
                <!-- Modal body -->
                <form class="p-4 md:p-5">
                    <div class="grid gap-4 mb-4 grid-cols-2">
                        <div class="col-span-1">
                            <label
                                for="name"
                                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                                >Nombre</label
                            >
                            <!-- Resultado del fetch -->
                            <p class="text-sm text-[#9a9a9a]" id="modal-output-name">
                            </p>
                        </div>
                        <div class="col-span-1">
                            <label
                                for="name"
                                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                                >Cédula</label
                            >
                            <!-- Resultado del fetch -->
                            <p class="text-sm text-[#9a9a9a]" id="modal-output-id">
                            </p>
                        </div>
                        <div class="col-span-2">
                            <label
                                for="name"
                                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                                >Cursos</label
                            >
                            <!-- Resultado del fetch -->
                            <p class="text-sm text-[#9a9a9a]" id="modal-output-courses">
                            </p>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Selección de elementos

        const modal = document.getElementById("crud-modal");
        const overlay = document.getElementById("overlay");
        const openButton = document.querySelector(
            "[data-modal-toggle='crud-modal']",
        );
        const closeButton = modal.querySelector(
            "[data-modal-toggle='crud-modal']",
        );

        // Abrir modal y mostrar overlay al hacer clic en "Buscar"
        openButton.addEventListener("click", (event) => {
            event.preventDefault();
            modal.classList.remove("hidden");
            modal.classList.add("flex");
            overlay.classList.remove("hidden");
        });

        // Cerrar modal y ocultar overlay al hacer clic en el botón de cierre
        closeButton.addEventListener("click", () => {
            modal.classList.remove("flex");
            modal.classList.add("hidden");
            overlay.classList.add("hidden");
        });

        // Cerrar modal y overlay al hacer clic en el overlay
        overlay.addEventListener("click", () => {
            modal.classList.remove("flex");
            modal.classList.add("hidden");
            overlay.classList.add("hidden");
        });
        // ID de usuario específico

        // Define la función en el ámbito global
       // ... Código anterior ...

window.fetchUserData = async function () {
    const modalInput = document.getElementById("modal-input");
    const modalOutputName = document.getElementById("modal-output-name");
    const modalOutputId = document.getElementById("modal-output-id");
    const modalOutputCourses = document.getElementById("modal-output-courses");
    const userId = modalInput.value;

    if (userId) {
        try {
            const response = await fetch(
                `https://certificados-backend.onrender.com/api/certificates/${userId}`
            );
            if (!response.ok) {
                throw new Error("Error al obtener los datos del usuario");
            }

            const userData = await response.json();

            // Muestra los datos en el <p> del modal
            modalOutputName.textContent = userData.name;
            modalOutputId.textContent = userData.id;

            // Crear una lista de cursos
            if (userData.certificates && userData.certificates.length > 0) {
                // Limpiar contenido previo
                modalOutputCourses.innerHTML = ''; // Limpiar contenido previo

                // Crear un <ul> para los cursos
                const ul = document.createElement("ul");
                ul.className = "list-disc pl-5"; // Puedes agregar clases para estilos si lo deseas

                userData.certificates.forEach((course) => {
                    const li = document.createElement("li");
                    li.textContent = course.course; // Asumiendo que cada curso tiene una propiedad 'name'
                    ul.appendChild(li);
                });

                // Añadir la lista de cursos al contenedor del modal
                modalOutputCourses.appendChild(ul);
            } else {
                modalOutputCourses.innerHTML = "<p>No hay cursos disponibles.</p>";
            }
        } catch (error) {
            console.error("Error:", error);
            modalOutputName.textContent = "Error al obtener los datos.";
        }
    } else {
        modalOutputName.textContent =
            "Por favor ingresa un número de cédula o código.";
    }
};

// ... Código posterior ...

    });
</script>
