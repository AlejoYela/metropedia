---
// Imports y datos
import CourseCard from "./CourseCard.astro";
import courseData from "../courseData";
import MeasureIcon from "../icons/MeasureIcon.astro";
import GavelIcon from "../icons/GavelIcon.astro";
import CircleCheckIcon from "../icons/CircleCheckIcon.astro";
import DotsIcon from "../icons/DotsIcon.astro"

const menuItems = [
   
    {
        category: "Metrología",
        link: "#",
        background: "bg-primary/20 hover:bg-primary/40",
        icon: MeasureIcon,
        iconProps: {
            stroke: "#fcb316",
            strokeWidth: "1",
            size: "size-12",
        },
    },
    {
        category: "Normativa internacional",
        link: "#",
        background: "bg-lime-600/30 hover:bg-lime-600/50",
        icon: GavelIcon,
        iconProps: {
            stroke: "#609b0c",
            size: "size-12",
        },
    },
    {
        category: "Gestión de la calidad",
        link: "#",
        background: "bg-indigo-700/30 hover:bg-indigo-700/50",
        icon: CircleCheckIcon,
        iconProps: {
            stroke: "#3e34bb",
            fill: "none",
            size: "size-12",
        },
    },
];

---
<div class="flex justify-evenly md:justify-start mb-3 md:mb-8 md:gap-8 text-sm md:text-xs">
    <a href="#" data-category="" class="tab-link flex flex-col items-center max-w-16">
        <div class={`flex items-center justify-center bg-white/20 hover:bg-white/40 w-12 h-12 rounded-full`}>
          <!-- Aquí debes incluir los iconos, por ejemplo usando un componente -->
          <DotsIcon class={`p-2 mx-auto size-12`} stroke="white" stroke-width="1" fill="none" />
        </div>
        <p class="text-[#9a9a9a] text-center mt-2 md:max-w-16">Todos</p>
      </a>
   { 
   menuItems.map(item => (
    <a href={item.link} data-category={item.category} class="tab-link flex flex-col items-center max-w-16">
      <div class={`flex items-center justify-center ${item.background} w-12 h-12 rounded-full`}>
        <!-- Aquí debes incluir los iconos, por ejemplo usando un componente -->
        <item.icon class={`p-2 mx-auto ${item.iconProps.size}`} stroke={item.iconProps.stroke} stroke-width={item.iconProps.strokeWidth} fill={item.iconProps.fill ? item.iconProps.fill : 'none'} />
      </div>
      <p class="text-[#9a9a9a] text-center mt-2 md:max-w-16">{item.category}</p>
    </a>
  ))}      

</div>
<div class="min-h-full mb-12">
    <nav class="bg-[#161717] rounded-lg hidden">
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
            <div class="flex h-16 items-center justify-between">
                <div class="flex items-center">
                    <div class="shrink-0">
                        <p class="font-semibold text-[#ffd16f]">Escuelas</p>
                    </div>
                    <div class="hidden md:block">
                        <div class="ml-10 flex items-baseline space-x-4">
                            <!-- Todos los cursos -->
                            <a
                                href="#"
                                data-category=""
                                class="tab-link bg-[#252627] text-white px-3 py-2 text-sm font-medium"
                                >Todos los cursos</a
                            >
                            {
                                [
                                    ...new Set(
                                        courseData.map(
                                            (course) => course.category,
                                        ),
                                    ),
                                ].map((category) => (
                                    <a
                                        href="#"
                                        data-category={category}
                                        class="tab-link bg-[#252627] text-white px-3 py-2 text-sm font-medium"
                                    >
                                        {category}
                                    </a>
                                ))
                            }
                        </div>
                    </div>
                </div>

                <div class="-mr-2 flex md:hidden">
                    <!-- Mobile menu button -->
                    <button
                        id="mobile-menu-button"
                        type="button"
                        class="relative inline-flex items-center justify-center rounded-md bg-secondary p-2 text-neutral-400 hover:bg-[#9a9a9a] hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-neutral-800"
                        aria-controls="mobile-menu"
                        aria-expanded="false"
                    >
                        <span class="absolute -inset-0.5"></span>
                        <span class="sr-only">Open main menu</span>
                        <!-- Menu open: "hidden", Menu closed: "block" -->
                        <svg
                            class="block size-6"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            aria-hidden="true"
                            data-slot="icon"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
                            ></path>
                        </svg>
                        <!-- Menu open: "block", Menu closed: "hidden" -->
                        <svg
                            class="hidden size-6"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            aria-hidden="true"
                            data-slot="icon"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M6 18 18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
        <!-- Mobile menu, show/hide based on menu state. -->
        <div id="mobile-menu" class="md:hidden">
            <div class="space-y-1 px-2 pb-3 pt-2 sm:px-3">
                <!-- Current: "bg-neutral-900 text-white", Default: "text-neutral-300 hover:bg-neutral-700 hover:text-white" -->

                {
                    [
                        ...new Set(courseData.map((course) => course.category)),
                    ].map((category) => (
                        <a
                            data-category={category}
                            href="#"
                            class="tab-link block rounded-md bg-secondary px-3 py-2 text-base font-medium text-white"
                            aria-current="page"
                        >
                            {category}
                        </a>
                    ))
                }
            </div>
        </div>
    </nav>

    <header class="bg-white bg-opacity-5 text-left">
        <div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
            <h1
                id="category-title"
                class="text-xl md:text-xl font-bold tracking-tight text-white mb-3"
            >
                Todos los cursos
            </h1>
            <p
                id="description"
                class="text-[#9a9a9a] font-semibold text-sm md:text-base"
            >
            </p>
        </div>
    </header>

    <main
        id="course-container"
        class="bg-white bg-opacity-5 shadow-2xl text-left text-[#252627]"
    >
        <div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
            <!-- Slider -->
            <div
                data-hs-carousel='{
                                    "loadingClasses": "opacity-0",
                                    "dotsItemClasses": "hs-carousel-active:bg-primary hs-carousel-active:border-primary size-3 border border-neutral-400 rounded-full cursor-pointer dark:border-neutral-600 dark:hs-carousel-active:bg-primary dark:hs-carousel-active:border-primary",
                                    "slidesQty": {
                                    "xs": 1,
                                    "sm": 2,
                                    "md": 3,
                                    "lg": 4
                                    }
                                }'
                class="relative"
            >
                <div
                    class="hs-carousel w-full overflow-hidden bg-transparent rounded-lg"
                >
                    <div class="relative min-h-72 -mx-1">
                        <!-- transition-transform duration-700 -->
                        <div
                            class="hs-carousel-body absolute top-0 bottom-0 start-0 flex flex-nowrap opacity-0 transition-transform duration-700"
                        >
                            {
                                courseData.map((course) => (
                                    <div
                                        class="course-card hs-carousel-slide px-1"
                                        data-category={course.category}
                                    >
                                        <CourseCard
                                            id={course.id}
                                            name={course.course}
                                            img={course.image}
                                            description={course.description}
                                            category={course.category}
                                            price={course.price}
                                        />
                                    </div>
                                ))
                            }
                        </div>
                    </div>
                </div>

                <button
                    type="button"
                    class="hs-carousel-prev hs-carousel-disabled:opacity-50 hs-carousel-disabled:pointer-events-none absolute inset-y-0 start-0 inline-flex justify-center items-center w-[46px] h-full text-neutral-800 hover:bg-neutral-800/10 focus:outline-none focus:bg-neutral-800/10 rounded-s-lg dark:text-white dark:hover:bg-white/10 dark:focus:bg-white/10"
                >
                    <span class="text-2xl" aria-hidden="true">
                        <svg
                            class="shrink-0 size-5"
                            xmlns="http://www.w3.org/2000/svg"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                        >
                            <path d="m15 18-6-6 6-6"></path>
                        </svg>
                    </span>
                    <span class="sr-only">Previous</span>
                </button>
                <button
                    type="button"
                    class="hs-carousel-next hs-carousel-disabled:opacity-50 hs-carousel-disabled:pointer-events-none absolute inset-y-0 end-0 inline-flex justify-center items-center w-[46px] h-full text-neutral-800 hover:bg-neutral-800/10 focus:outline-none focus:bg-neutral-800/10 rounded-e-lg dark:text-white dark:hover:bg-white/10 dark:focus:bg-white/10"
                >
                    <span class="sr-only">Next</span>
                    <span class="text-2xl" aria-hidden="true">
                        <svg
                            class="shrink-0 size-5"
                            xmlns="http://www.w3.org/2000/svg"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                        >
                            <path d="m9 18 6-6-6-6"></path>
                        </svg>
                    </span>
                </button>
            </div>
            <!-- End Slider -->
        </div>
    </main>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const tabLinks = document.querySelectorAll(".tab-link");
        const courseContainer = document.getElementById("course-container");
        const courseCards = courseContainer.querySelectorAll(".course-card");
        const categoryTitle = document.getElementById("category-title");
        const descriptionText = document.getElementById("description");
        const mobileMenu = document.getElementById("mobile-menu");
        const mobileMenuButton = document.getElementById("mobile-menu-button");

        mobileMenuButton.addEventListener("click", (event) => {
            event.preventDefault();

            mobileMenu.classList.toggle("hidden");
        });

        tabLinks.forEach((link) => {
            link.addEventListener("click", (e) => {
                e.preventDefault();
                const category = link.getAttribute("data-category");

                // Actualizar el título de la categoría
                categoryTitle.textContent = category
                    ? category
                    : "Todos los cursos";

                // Descripciones de cada categoría
                const DESCRIPTIONS = {
                    Metrología:
                        "Clave para la precisión y confiabilidad en entornos que requieren medición exacta.",
                    "Normativa internacional":
                        "Fundamental para el cumplimiento y competitividad en mercados globales.",
                    "Gestión de la calidad":
                        "Optimiza procesos y asegura productos y servicios de alto estándar.",
                };

                // Función para actualizar la descripción

                // Verifica si la categoría tiene una descripción en el objeto DESCRIPTIONS
                if (DESCRIPTIONS[categoryTitle.textContent]) {
                    descriptionText.textContent =
                        DESCRIPTIONS[categoryTitle.textContent];
                } else {
                    descriptionText.textContent =
                        "Selecciona una categoría para ver la descripción correspondiente.";
                }

                // Filtrar los cursos
                courseCards.forEach((card) => {
                    const courseCategory = card.getAttribute("data-category");

                    // Convertimos `card` a `HTMLElement` para acceder a `style`
                    if (!category || courseCategory === category) {
                        (card as HTMLElement).style.display = "block";
                    } else {
                        (card as HTMLElement).style.display = "none";
                    }
                });

                // Marcar el link activo
                tabLinks.forEach((tab) => tab.classList.remove("active"));
                link.classList.add("active");
            });
        });
    });
</script>
