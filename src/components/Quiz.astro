---
const { index, module } = Astro.props;
---

<div
  popover
  id={`${index}-my-quiz-popover`}
  class="relative z-10"
  aria-labelledby="modal-title"
  role="dialog"
  aria-modal="true"
>
  <div
    class="fixed inset-0 bg-neutral-900/75 transition-opacity"
    aria-hidden="true"
  >
  </div>

  <div class="fixed inset-0 z-10 w-screen overflow-y-auto">
    <div
      class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0"
    >
      <div
        class="relative transform overflow-hidden rounded-sm bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg"
      >
        <div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
          <div class="sm:flex sm:items-start">
            <div
              class="mx-auto flex size-12 shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:size-10"
            >
              <img
                src=""
                class="rounded-sm"
                alt=""
                transition:name=`content ${index} image`
              />
            </div>
            <div class="mt-3 sm:ml-4 sm:mt-0 text-left">
              <h3
                class="text-base font-semibold text-neutral-900"
                id="modal-title"
              >
                Cuestionario sobre {module.title}
              </h3>
              <div class="mt-2">
                <p class="text-sm text-neutral-500 mb-3">
                  {
                    module.quiz.questions.map((question, index) => (
                      <div>
                        <h3 class="mt-5">{question.question}</h3>
                        <div class="relative">
                          <select
                            data-hs-select='{
      "placeholder": "Seleciona una opción...",
      "toggleTag": "<button type=\"button\" aria-expanded=\"false\"></button>",
      "toggleClasses": "hs-select-disabled:pointer-events-none hs-select-disabled:opacity-50 relative py-3 ps-4 pe-9 flex gap-x-2 text-nowrap w-full cursor-pointer bg-white border border-gray-200 rounded-lg text-start text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:bg-neutral-900 dark:border-neutral-700 dark:text-neutral-400 dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-neutral-600",
      "dropdownClasses": "mt-2 z-50 w-full max-h-72 p-1 space-y-0.5 bg-white border border-gray-200 rounded-lg overflow-hidden overflow-y-auto dark:bg-neutral-900 dark:border-neutral-700",
      "optionClasses": "py-2 px-4 w-full text-sm text-gray-800 cursor-pointer hover:bg-gray-100 rounded-lg focus:outline-none focus:bg-gray-100 dark:bg-neutral-900 dark:hover:bg-neutral-800 dark:text-neutral-200 dark:focus:bg-neutral-800",
      "optionTemplate": "<div class=\"flex justify-between items-center w-full\"><span data-title></span><span class=\"hidden hs-selected:block\"><svg class=\"shrink-0 size-3.5 text-blue-600 dark:text-blue-500 \" xmlns=\"http:.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"20 6 9 17 4 12\"/></svg></span></div>"
    }'
                          >
                            <option value="">Selecciona</option>
                            {question.options.map((question) => (
                              <option>{question}</option>
                            ))}
                          </select>

                          <div class="absolute top-1/2 end-2.5 -translate-y-1/2">
                            <svg
                              class="shrink-0 size-4 text-gray-500 dark:text-neutral-500"
                              xmlns="http://www.w3.org/2000/svg"
                              width="24"
                              height="24"
                              viewBox="0 0 24 24"
                              fill="none"
                              stroke="currentColor"
                              stroke-width="2"
                              stroke-linecap="round"
                              stroke-linejoin="round"
                            >
                              <path d="m7 15 5 5 5-5" />
                              <path d="m7 9 5-5 5 5" />
                            </svg>
                          </div>
                        </div>
                      </div>
                    ))
                  }
                </p>
              </div>
            </div>
          </div>
        </div>
        <div
          class="bg-neutral-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6"
        >
          <!-- El botón tiene un atributo data-index -->
          <button
            type="button"
            class="mt-3 inline-flex w-full justify-center rounded-sm bg-white px-3 py-2 text-sm font-semibold text-neutral-900 shadow-sm ring-1 ring-inset ring-neutral-300 hover:bg-neutral-50 sm:mt-0 sm:w-auto"
            data-index={`${index}`}
          >
            Cerrar
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Delegación de eventos para los botones "Cerrar"
  document.addEventListener("click", (event) => {
    // Verificar si el clic ocurrió en un botón con data-index
    const closeButton = event.target.closest("button[data-index]");
    if (closeButton) {
      const index = closeButton.getAttribute("data-index");
      const popover = document.getElementById(`${index}-my-quiz-popover`);
      if (popover) {
        popover.hidePopover(); // Cierra el popover
      }
    }
  });
</script>
